<template>
    <view class="i-class i-tab-bar {{ fixed ? 'i-tab-bar-fixed' : '' }}">
        <slot></slot>
        <view class="i-tab-bar-list">
            <view class="i-tab-bar-layer" wx:for="{{ list }}"
                  wx:key="{{ item.key }}" data-key="{{ item.key }}"
                  bindtap="handleClickItem" style="width: {{ 100 / list.length }}%"></view>
        </view>
    </view>
</template>
<script>
    export default {
        externalClasses: ['i-class'],

        relations: {
            '../tab-bar-item/index': {
                type: 'child',
                linked () {
                    this.changeCurrent();
                },
                linkChanged () {
                    this.changeCurrent();
                },
                unlinked () {
                    this.changeCurrent();
                }
            }
        },

        properties: {
            current: {
                type: String,
                value: '',
                observer: 'changeCurrent'
            },
            color: {
                type: String,
                value: ''
            },
            fixed: {
                type: Boolean,
                value: false
            }
        },

        data: {
            list: []
        },

        methods: {
            changeCurrent (val = this.data.current) {
                let items = this.getRelationNodes('../tab-bar-item/index');
                const len = items.length;

                if (len > 0) {
                    const list = [];
                    items.forEach(item => {
                        item.changeCurrent(item.data.key === val);
                        item.changeCurrentColor(this.data.color);
                        list.push({
                            key: item.data.key
                        });
                    });
                    this.setData({
                        list: list
                    });
                }
            },
            emitEvent (key) {
                this.triggerEvent('change', { key });
            },
            handleClickItem (e) {
                const key = e.currentTarget.dataset.key;
                this.emitEvent(key);
            }
        }
    }
</script>

<style lang="less">
    @import "../styles/_base.less";
    @import "../styles/_mixins.less";

    .i-tab-bar{
        display: flex;
        width: 100%;
        height: 120px;
        box-sizing: border-box;
        position: relative;
        justify-content: space-around;
        align-items: center;
        -webkit-box-align: center;
        background: #fff;

        &::after{
            .hairline();
            border-top-width: 1px;
        }

        &-fixed{
            position: fixed;
            bottom: 0;
            z-index: 2;
        }
        &-list{
            position: absolute;
            top: 0;
            bottom: 0;
            left: 0;
            right: 0;
        }

        &-layer{
            display: block;
            float: left;
            height: 100%;
        }
    }
</style>
